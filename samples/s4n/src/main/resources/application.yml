# Rather than using the ibm.mq tree, we use application-specific configuration
# elements that get passed into the Spring code so we can still construct the MQ CF.
# All the same properties are available to us of course, including TLS but we're not using 
# that here for simplicity.     
ibm.mq.pool.enabled: true
              
qm2: 
  queueManager: "QM2"
  #channel:
  #connName:
  channel: "SYSTEM.DEF.SVRCONN"
  connName: "localhost(1415)"
  #pool: 
  #  enabled: true
  trace:
    traceFile: "/tmp/jms/trace.log"
    parameterTrace: true
    status: ON
    
qm1: 
  queueManager: "QM1"
  #channel:
  #connName:
  channel: "SYSTEM.DEF.SVRCONN"
  connName: "localhost(1414)"
  #pool:
  #  enabled: true


# Mostly properties controlling some timers
spring:
  jms:
    #cache:
    #  enabled: true
    listener:
      receiveTimeout: 2s
        
narayana:
  default-timeout: 3600
  messaginghub:
    enabled: true

# Logging        
logging:
  pattern:
    console:
    # console: "%logger{36} - %msg%n"
    file: "[%date{dd/MM/yy HH:mm:ss.SSS}   ] %thread %logger{36} - %msg%n"
  file: 
    name: /tmp/jms/trace.log  
  level:
    root: INFO 
    com:
      arjuna: ERROR    
      ibm:
        mq:
          spring:
            boot: INFO 
    org:
      jboss: INFO 

